title: Developing Robust and Scalable RAG Systems: Lessons Learned from Five Use Cases
---
created: 2024-12-20
---
code: NGTP3M
---
speaker_names: Arne Grobrügge, Alina Dallmann
---
abstract:

Retrieval-Augmented Generation (RAG) enables enterprises to effectively use large language models with their own proprietary data. However, the rapid evolution of underlying technologies makes selecting and implementing suitable RAG solutions increasingly challenging.

In this talk, we share key insights from five real-world use cases, focusing on (1) building a modular, adaptable RAG system leveraging open-source libraries like LiteLLM and Langfuse, (2) ensuring consistent and scalable setups through Infrastructure-as-Code (IaC), and (3) applying systematic evaluation methods to enhance system quality. Attendees will leave with actionable strategies to design robust, GDPR-compliant RAG systems, integrate proprietary knowledge sources, and continuously optimize performance for scalable, future-proof applications.
---
full_description:

ChatGPT is widely known for providing answers to almost any question, yet it faces significant limitations when dealing with current, personal, or proprietary information—such as confidential internal product details. Retrieval-Augmented Generation (RAG) bridges this gap by supplying large language models with external knowledge for response generation. However, building productive RAG systems comes with significant technical and operational challenges, including technology selection, scalability, and robustness.
Drawing from five practical use cases, this talk will demonstrate how to design and implement robust, scalable RAG systems tailored to diverse organizational needs.

**Key Takeaways**:
  **1. Building a Modular Core System:** Learn how a flexible, modular architecture—integrating different open-source libraries—can simplify RAG application development across multiple use cases.
  **2.	Scalable Infrastructure with IaC:** Discover how Infrastructure-as-Code (IaC) ensures consistent, reproducible setups across testing and production environments or different projects.
  **3.	Integrating Proprietary Knowledge Sources:** Learn about our lessons learned from connecting RAG systems with enterprise-specific platforms like SharePoint and intranets, handling diverse data formats effectively.
**4.	Cost Tracking:** Understand how open-source tools like LiteLLM facilitate transparent budget tracking across teams and use cases.
**5.	Continuous Improvement Through Feedback:** Discover how libraries like Langfuse enable robust evaluation and feedback mechanisms, allowing you to identify areas for improvement and systematically address them to enhance retrieval accuracy and overall system performance. 

This session will equip attendees with actionable insights and strategies to:
•	Design scalable, GDPR-compliant RAG systems using IaC
•	Integrate proprietary knowledge sources seamlessly.
•	Continuously improve system performance through structured feedback loops.
---
room: 
---
day: 
---
start_time: 
---
track: PyData: Generative AI
