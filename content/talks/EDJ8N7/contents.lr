title: Learnings from migrating a Flask app to FastAPI
---
created: 2024-12-19
---
code: EDJ8N7
---
speaker_names: Orell Garten
---
abstract:

FastAPI has been constantly growing in popularity during the last years. A lot of this growth is driven by its relative simplicity and ease-of-use. In this talk, we'll discuss some practical insights into building a FastAPI application, based on my experience of migrating an existing Flask prototype to FastAPI. 

We'll explore how FastAPI's core features like Pydantic integration and dependency injection can improve API development, while also talking about the drawbacks of FastAPI.
---
full_description:

Building HTTP APIs has become a normal part of the work as a software or data engineer within the last 10 to 15 years. In the Python ecosystem Flask was the only option to build an HTTP API for many years. After its initial release in 2018 FastAPI quickly became a serious alternative to build such APIs with Python.

In this talk I will share my experiences from migrating an existing HTTP API built with flask to a FastAPI-based API. 

We will discuss the following topics: 

- Why did we migrate at all?
- Modeling data for input and output 
- Async is overrated
- The different ecosystems and why it doesn't matter
- Problems you **will** encounter 

The talk will show you the practical differences between developing APIs with FastAPI or Flask.
---
room: 
---
day: 
---
start_time: 
---
track: PyCon: Django & Web
