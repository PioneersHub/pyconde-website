title: Extending Python's async capabilities using a Rust runtime
---
created: 2024-12-22
---
code: HPA3PG
---
speaker_names: Shivay Lamba, Gaurav Pandey
---
abstract:

With the growing adoption of Rust bindings in the Python ecosystem with the pyop3 Rust bindings for Python, throughput efficiency has become a top priority.

Inspired by Python’s extensibility and ease of use, and powered by Rust’s performance, Robyn was created.

Robyn stands out as one of the fastest Python web frameworks, delivering near-native Rust performance while maintaining the simplicity of Python. Its runtime, written in Rust, enables developers to build high-performance web applications effortlessly. This is the perfect example of extending Interoperability of Python with Rust to create an async Python web framework with a Rust Runtime

This talk will explore the increasing integration of Rust into the Python ecosystem, and how we extend async capabilities in Python using Pyop3 by giving an example of Robyn and the kind of architectural changes that were required for the same. 

We also discuss some of the drawbacks of the notorious Global Interpreter Lock in Python doesn’t allow for true concurrency while Rust uses native threading for faster execution.
---
full_description:

With the growing adoption of Rust bindings in the Python ecosystem with the pyop3 Rust bindings for Python, throughput efficiency has become a top priority.

Inspired by Python’s extensibility and ease of use, and powered by Rust’s performance, Robyn was created.

Robyn stands out as one of the fastest Python web frameworks, delivering near-native Rust performance while maintaining the simplicity of Python. Its runtime, written in Rust, enables developers to build high-performance web applications effortlessly. This is the perfect example of extending Interoperability of Python with Rust to create an async Python web framework with a Rust Runtime

This talk will explore the increasing integration of Rust into the Python ecosystem, and how we extend async capabilities in Python using Pyop3 by giving an example of Robyn and the kind of architectural changes that were required for the same. 

We also discuss some of the drawbacks of the notorious Global Interpreter Lock in Python doesn’t allow for true concurrency while Rust uses native threading for faster execution. 

So this Case study of using Rust in Robyn framework, architectural highlights and benefits


1. Some drawbacks of Python native apps like lack of good async support, GIL, unoptimized concurrency
2. Need for use of PyOp3 
3. Architectural benefits of introducing Rust for getting native async and concurrency benefits by using rust runtime
4. case study of using Rust in Robyn framework, architectural highlights and benefits
