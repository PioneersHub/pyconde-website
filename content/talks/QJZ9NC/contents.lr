title: Prove What You Compute: Cryptographic Verification for Python Pipelines
---
created: 2024-12-21
---
code: QJZ9NC
---
speaker_names: Michele Dallachiesa
---
abstract:

This talk introduces a framework for cryptographically verifying computational pipelines in Python. By generating unforgeable proofs at each stage, you can guarantee your results haven't been tampered with or fabricated. Whether you're running machine learning workflows, data transformations, or scientific computations, you'll learn how to implement verification that proves your pipeline executed as intended.
---
full_description:

With automated pipelines and distributed computing, how do you prove your results actually came from your intended computation? Whether you're concerned about system integrity, audit requirements, or catching subtle bugs, computational proof systems offer a powerful solution. 

Through hands-on examples, we'll build a verifiable pipeline that generates cryptographic evidence of its execution. You'll learn how to:

- Generate tamper-proof fingerprints that capture the exact state of computations
- Scale the proof system efficiently through sampling, batching and parallelization
- Make proof forgery computationally and economically infeasible

Attendees will leave with working example code and practical instructions for adding verification to their own pipelines.
---
room: 
---
day: 
---
start_time: 
---
track: PyCon: Security
