title: Will Python accept me now? Unlearning the nooby habits before you code next
---
created: 2024-12-21
---
code: BF7RZB
---
speaker_names: Adarsh Kumar, Palak Mittal
---
abstract:

Often coming from a background in other languages such as C++ or Java, we make a lot of programming decisions with Python, which are not just non-pythonic, but some can even be classified as noob. (No, it's not about using braces `{}` and semicolons `;` :')

In this talk, we will explore some common `nooby` programming decisions and learn how to make our code adapt to Python's idiomatic style better. Whether you’re just starting or have years of experience, learn to avoid nooby habits and make the most of Python’s simplicity and power. Remember `Simplicity != NoobProof`
---
full_description:

As developers, transitioning to Python from other languages like Java and C++ often feels deceptively simple... until it doesn’t. More often than not, we carry along practices that feel right but clash with Python’s idiomatic style. In this talk, we’ll explore how some programming decisions can unintentionally brand us as "noobs" and more importantly, how to unlearn them. 

While talking about:
* How someone can mistake simplicity for efficiency?
* How to embrace Python’s unique constructs for cleaner, more expressive code?
* How we can leverage Python’s ecosystem to avoid reinventing the wheel? 

much more of similar "nooby" habits, which we often carry on as Polyglot Programming Baggage.

By the end of this talk, you'll learn to unlearn nooby habits, write more Pythonic code, and use Python’s rich ecosystem to solve problems elegantly and effectively.

**Come for the pitfalls; leave with Pythonic prowess.** 

P.S. Don't worry it's not going to be a `{}` vs indentation comparison talk. Bython is already there for that.
---
room: 
---
day: 
---
start_time: 
---
track: PyCon: Programming & Software Engineering
