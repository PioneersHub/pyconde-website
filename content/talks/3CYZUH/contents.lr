title: Building a Self-Hosted MLOps Platform with Kubernetes
---
created: 2024-12-22
---
code: 3CYZUH
---
speaker_names: Josef Nagelschmidt
---
abstract: Many managed MLOps platforms, while convenient, often fall short in providing flexibility, requiring complex integrations, and causing vendor lock-in. In this talk, we’ll share our experience transitioning from managed MLOps tools to a self-hosted solution built on Kubernetes. We’ll focus on how we leveraged open-source tools like Feast, MLflow, and Ray to build a more flexible, scalable, and customizable platform that is now in use at Rewe Digital. By migrating to this self-hosted architecture, we gained greater control over our ML pipelines, reduced our dependency on third-party services, and created a more adaptable infrastructure for our ML workloads.
---
description: Many managed MLOps platforms, while convenient, often fall short in providing flexibility, requiring complex integrations, and causing vendor lock-in. In this talk, we’ll share our experience transitioning from managed MLOps tools to a self-hosted solution built on Kubernetes. We’ll focus on how we leveraged open-source tools like Feast, MLflow, and Ray to build a more flexible, scalable, and customizable platform that is now in use at Rewe Digital. By migrating to this self-hosted architecture, we gained greater control over our ML pipelines, reduced our dependency on third-party services, and created a more adaptable infrastructure for our ML workloads.

Talk Outline: 

1. Introduction (5 minutes):
- The challenges of using managed MLOps platforms: vendor lock-in, integration complexity, and lack of flexibility.
- Why transitioning to a self-hosted solution on Kubernetes can be beneficial.

2. Proposed Solution (10 minutes):
- Why Kubernetes for MLOps?
- How open-source tools like Feast, MLflow, and Ray come together to form the core of a robust self-hosted MLOps stack.
- Benefits of building a flexible, scalable platform that fits your needs.

3. Building the Platform (10 minutes):
- Practical steps for setting up and configuring Feast, MLflow, and Ray on Kubernetes.
- Integration strategies and how to manage pipelines, model tracking, and feature storage.

4. Lessons Learned and Q&A (5 minutes):
- Challenges and takeaways during the migration process
- Q&A
