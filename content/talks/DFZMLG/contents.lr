title: Improving and Monitoring a RAG System with Open Source Components
---
created: 2025-01-03
---
code: DFZMLG
---
speaker_names: Michael Jaumann
---
abstract:

The city of Munich offers extensive information about municipal services on its website, but findability is often a problem. This talk presents a solution: an AI-based search with Retrieval Augmented Generation (RAG) that can process questions in natural language.

The topic is relevant as many stakeholders face similar challenges. The presentation explains the implementation using open source components, the step-by-step improvement of the search function and the monitoring during operation. Participants will learn how to build, optimise and monitor an AI-based search.
---
full_description:

The city of Munich offers comprehensive information on municipal services on its website. However, despite the wide range of information available, there is often a problem that citizens have difficulty finding the desired information. To address this widespread issue, an AI-based search was developed that can process natural language questions, thus improving the accessibility of information.

This presentation addresses the relevant problem of information retrieval, which many cities and institutions face, and shows how Munich has solved it using Retrieval Augmented Generation (RAG). RAG is a technique that enhances the capabilities of language models (LLMs) by integrating information from external data sources to generate more precise and relevant answers.

The implementation of the AI-based search was carried out using various open-source components:
- Qdrant: A vector database that holds the content as vectors.
- Langchain: An abstraction layer for LLMs.
- Langfuse: Used for monitoring and evaluating LLM based applications.
- Litellm: A proxy layer for LLMs and embedding models, which simplifies access to and integration of various models.

Special emphasis is placed on the continuous improvement of the search function through the use of test datasets. These data sets are used to evaluate the performance of the search function and to make targeted improvements.  Additionally, monitoring is supplemented by user feedback to ensure that the search function meets user requirements.

The main points of the presentation include:
- The detailed structure and individual components of the RAG system.
- The steps for continuous improvement and evaluation of the search function.
- Monitoring methods during live operation, including user feedback.
- The integration and use of the open-source components Langchain, Langfuse, and Litellm.

By the end of the presentation, attendees will have understood how to implement, continuously improve and monitor an AI-based search in live operation. They will also have learned the basics of RAG and the benefits of the open source tools used.
---
room: 
---
day: 
---
start_time: 
---
track: PyData: Generative AI
