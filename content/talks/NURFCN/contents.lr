title: Extending Python with Rust
---
created: 2024-12-20
---
code: NURFCN
---
speaker_names: Hendrik Niemeyer
---
abstract:

Sometimes we run into performance problems when we develop software for Python with complex algorithms for which the ecosystem does not provide us with a handy package we can use to solve our problem. Here Rust can help us. 

This talk will introduce how to write packages for Python in Rust using the PyO3 library. Starting with an accessible introduction to Rust for those new to the language, we’ll explore why Rust can bring the optimal performance to our algorithms. With that knowledge we will  build a Python extension in PyO3 together.
---
full_description:

Python's performance can be a bottleneck in computation-heavy applications although a lot of heavily optimized libraries like NumPy exist which circumvent this problem. These libaries have been written in C and C++ in the past but with the PyO3 package we can also use Rust to write Python extensions. 

While Rust is often praised for its safety features without comprosing the performance needed for a systems programmign language it is also much easier to learn than C and C++ making it an ideal candidate for a language to write Python extensions in. 

We’ll begin with a beginner-friendly introduction to Rust, covering the essentials needed to follow along with the rest of the session. No prior knowledge of Rust, its tooling and ecosystem is needed. 

Then we will learn how PyO3 works by writing a Python extension together and using it in Python code. 

By the end of the talk, you’ll have a solid understanding of:

- Rust's basic syntax and core concepts

- How to use PyO3 to create Python extension modules.
