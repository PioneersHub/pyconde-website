title: Why just about anyone can install arrow-odbc
---
created: 2024-12-22
---
code: UXMLS3
---
speaker_names: Markus Klein
---
abstract:

Build on top of Apache Arrow and ODBC `arrow-odbc` enables exchange of data between databases and in memory Arrow arrays. This talk is about the desgin decisions which make `arrow-odbc` efficient as well as portable and easy to install.
---
full_description:

Build on top of Apache Arrow and ODBC `arrow-odbc` enables exchange of data between databases and in memory Arrow arrays.

At first we will introduce the ODBC standard, how it works, how it is dated a bit, but how it still enables us to communicate with almost every data source out there.

The efficiency part of the talk will ODBC block cursors and their speed and memory implications. It will also hint on why they are often overlooked then engaging with the ODBC API, besides usually being the better choice, especially for applications dealing with lots of data at once.

The talk will then go into the challenges of tying the ODBC system dependency, an Arrow implementation into easy to build and very portable wheels, which run on many platforms, with many interpreters, with many different pyarrow versions. In order to do so we will look at the tradeoffs between using PyO3 vs cffi in order to interopt with Rust and the benefits of using the Arrow C-Interface vs directly linking against the C++ implementation.
