title: Observability Matters: Empowering Python Developers with OpenTelemetry.
---
created: 2024-12-30
---
code: UDSJME
---
speaker_names: Yash Verma
---
speakers:


### Yash Verma

Yash is a software engineer and researcher with a deep interest in distributed systems. His focus is on observability and performance, areas where he constantly seeks new insights. As an active advocate of OpenTelemetry, Yash contributes to both the project and the wider community. Outside of tech, he’s an avid explorer, whether in the kitchen experimenting with new recipes or traveling the world to taste diverse cuisines.

---
abstract:

Have you ever experienced your favorite social platform going down? It’s frustrating, right? As users, we feel the inconvenience immediately. To prevent these disruptions, engineering teams rely on various tools and practices to address unexpected system behavior. In today’s distributed world, applications are often segmented into microservices to improve agility and performance. This also brings added complexity, with more opportunities for things to go wrong - errors, latency and more. In this dynamic landscape, observability has evolved from a mere buzzword into a crucial approach for modern reliable systems. We initially gravitate towards a tool for its ease of use, but later after investing significant amount of time and finances, if we choose to migrate, vendor lock-in becomes a major concern. This is where the importance of open standards like OpenTelemetry become essential.

While many think of observability as solely an issue for SREs, but it’s increasingly a developer concern. During this session, we’ll explore why observability matters and how it is evolved over the years. We'll cover how to instrument Python code, process telemetry data and export it seamlessly for analysis. Attendees will leave with a clearer understanding of how observability increases confidence in managing complex systems and how adopting open standards improve the overall developer experience. Let’s work together to redefine OSS observability, as a shared responsibility through collaboration.
---
full_description:

During this session, I’ll cover the following key topics:

- The evolution of observability and why it has become essential over the past few decades.

- A deep dive into core telemetry signals: Logs, Metrics, and Traces.

- The challenges developers face with modern observability, and how adopting OpenTelemetry can address these issues.

- A comparison between traditional approaches and the OpenTelemetry method, focusing on everything from easy Python code instrumentation to advanced data processing and seamless telemetry export to any observability backend—without vendor lock-in.

- Different sampling techniques like head, tail, probabilistic, allow you to have full control over the data you ingest and its associated costs with different setup strategies.

- Best practices for getting started with OpenTelemetry, including a live code demo.

- Future of AI in the of open-source observability and ongoing work on OpenTelemetry with eBPF.
---
room: 
---
day: 
---
start_time: 
---
track: Programming & Software Engineering
---
python_skill: 
---
domain_expertise: 
---
social_card_image: /static/media/social/talks/UDSJME.png

