title: Simplifying RAG Development: An Open-Source Blueprint for Scalable and Customizable Systems
---
created: 2024-12-21
---
code: 8ZBZGK
---
speaker_names: Piotr Kalota
---
abstract:

Retrieval-Augmented Generation (RAG) systems give users advanced interaction and analysis capabilities with unstructured data and are among the most prominent applications of Large Language Models (LLMs). While building or purchasing a basic RAG system is now straightforward, customizing it for specific use cases and deploying it at scale remains a significant challenge. 

This talk introduces our open-source RAG blueprint designed to streamline configuration and customization, provide integrated monitoring tools, and enable scalability from prototypes to production. Additionally, it incorporates mechanisms for human feedback, LLM-based evaluation metrics and allows privacy-preserving setups.  

Using real-world examples, attendees will learn practical strategies for building open-source based RAG systems tailored to diverse needs, from lightweight knowledge bases to enterprise-grade applications. We will also compare open-source and commercial solutions, highlighting pitfalls, trade-offs, and key considerations in deciding whether to build or buy.
---
full_description:

Retrieval-Augmented Generation (RAG) systems allow us to analyze and interact with documents and unstructured data in manifold ways and are one of the most prominent applications of Large Language Models (LLMs). Building or just buying your own RAG system has become easy, properly customizing or even packaging it into a usable data product, which is deployed to a productive setup remains challenging and time consuming. 

In this talk, we introduce our open-source RAG blueprint designed to simplify development while offering full control over performance and resource usage. Our open-source blueprint streamlines RAG development by simplifying configuration and customization, providing integrated monitoring tools for better oversight and troubleshooting, enabling scalability from prototypes to production, and incorporating mechanisms for human feedback and LLM-based metrics for proper evaluation. 

Our blueprint uses the following components to create a cohesive framework: 

- LlamaIndex for document chunking and parsing 
- Embedding models from Hugging Face, which are then stored and retrieved via a QDrant vector database 
- User interaction is done through Chainlit, which provides a simple chat UI interface 
- For observability and monitoring, Langfuse is used to track system performance and user feedback 
- For evaluation, the Ragas framework is used to monitor faithfulness, relevancy and accuracy of the system.  

The blueprint is designed with flexibility in mind, making it straightforward to replace any component to adapt to specific requirements or preferences without significant effort. 

Through practical examples and demonstrations, we will showcase strategies for building RAG systems tailored to diverse use cases, from lightweight knowledge bases to enterprise-grade applications.   Additionally, we will examine the advantages and limitations of open-source solutions compared to commercial offerings, addressing critical considerations such as cost, performance efficiency, and privacy.
---
room: 
---
day: 
---
start_time: 
---
track: PyData: Generative AI
