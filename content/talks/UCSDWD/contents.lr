title: Who does Python trust, and why?
---
created: 2024-12-21
---
code: UCSDWD
---
speaker_names: Dom Weldon
---
abstract: We all know how important it is to make sure that you see the "secure" padlock icon when paying for something online. It's simple, easy to understand, and automatic. 

Is your code the same? How would you start to make sure it is? Letâ€™s dive into those questions in this talk.
---
description: First off, the basics: security is based on trust, but trust must be verified. This is especially true in the design of 'zero-trust' networks. Knowing who your code trusts, and how you verify that trust, is therefore essential. 

This talk will briefly go through some of the basics, such public/private key cryptography, DNS, and x509 certificate signing, before examining some of the wider implementation and regulation of PKI (Public Key Infrastructure) online. We'll look at how python interfaces with this, along with some history, and assess the future of important integrations like certifi and truststore, before touching on the important issues of DNS security, as well as supply chain attacks.

Hopefully, this talk will give you a headstart or a refresh on the knowledge required to have genuinely constructive paranoia when coding. 

Failing that, at the very least, I promise to make you the go-to expert on how your company's proxy works, and ensure you never again type "pip config set global.verify_ssl false".
