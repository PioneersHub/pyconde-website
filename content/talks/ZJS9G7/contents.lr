title: Building a Local AI Photo Tagger with Django, DeepFace, and pgvector"
---
created: 2024-12-20
---
code: ZJS9G7
---
speaker_names: melhin
---
abstract:

Learn how to build a local photo tagger using Django, DeepFace, and pgvector. We’ll explore face detection, embedding storage, and similarity searches with a focus on L2 distance, all through a minimal admin-focused interface. See how privacy-first AI tools can be simple and powerful.
---
full_description:

Imagine a world where you can manage and tag your photo collection without relying on cloud services or sacrificing privacy. In this talk, we’ll show you how to build your own local AI photo tagger using Django, DeepFace, and pgvector.  

**What we’ll cover:**  
- **Face detection and embedding generation**: We’ll use DeepFace to detect faces in photos and calculate embeddings—numerical representations of faces.  
- **Storing and comparing embeddings**: With pgvector, a Postgres extension, we’ll store these embeddings and compute similarity searches efficiently. We’ll discuss different similarity algorithms, focusing on L2 distance as a practical example.  
- **Django as the interface**: Using Django’s admin interface, we’ll create a simple, functional tool for uploading, tagging, and searching photos locally.  

This talk provides a step-by-step walkthrough of how these components fit together to deliver a seamless photo tagging solution. We’ll explain the underlying concepts, highlight the advantages of a privacy-first approach, and showcase the setup in action through a small demo.  

By the end of the session, you’ll understand how to integrate these tools to create your own AI-powered applications, combining ease of use with cutting-edge technology. Whether for personal use or as inspiration for larger projects, this talk demonstrates how to keep AI local, simple, and impactful.
---
room: 
---
day: 
---
start_time: 
---
track: PyCon: Django & Web
