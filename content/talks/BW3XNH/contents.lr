title: Making Robots See: Using Python for Basic Computer Vision
---
created: 2024-12-22
---
code: BW3XNH
---
speaker_names: Toyibat Adele
---
abstract:

Our eyes are our windows to the world. Through them we recognize familiar faces, read books that make us giggle, or even walk to our favourite coffee shop. With Python, you can allow robots to see the world just like you do! By giving them this ability, they become smarter and more interactive.

In this talk, I’ll discuss how to achieve this using Python and OpenCV. You’ll learn the basics of processing images, detecting objects and making your robot respond to its environment. We’ll also cover how to integrate this in your robot or simulate this in Gazebo.

By the end, you’ll know how to give your robot the ability to see and respond to the world, _just like you do!_
---
full_description:

We use our eyes to make sense of the world—recognizing faces, finding our way, and interacting with our surroundings. With Python and OpenCV, we can give robots this powerful capability, and it’s simpler than you might think!
 
In this talk, I’ll walk you through the basics of computer vision and how to simulate robot vision in a virtual environment. We’ll start by processing images, detecting objects, and making sense of visual data. Then, we’ll explore how to integrate this into robot simulations using Gazebo, so you can experiment without needing physical hardware. 

**Here’s the outline:** 
1. Introduction (3 min)
2. Why computer vision matters for robots (2 min) 
3. Getting started with image processing in Python using OpenCV (5 min) 
4. Teaching robots to identify and recognize objects (5 min)
5. How to integrate computer vision into simulated robots in Gazebo (3 min)
6. Live demo: Making robots see with Python and OpenCV (5 min)
7. Q&A session (2 mins)

If you’ve ever been curious about how robots can see and respond to the world, this talk is for you. No hardware? _No problem!_ All you need is Python, a bit of curiosity, and your computer.
---
room: 
---
day: 
---
start_time: 
---
track: PyData: Embedded Systems & Robotics
