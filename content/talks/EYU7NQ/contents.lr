title: Let the Robots Test: Acceptance Test-Driven Development (ATDD) with Robot Framework
---
created: 2024-12-17
---
code: EYU7NQ
---
speaker_names: Stefan Kraus
---
abstract:

Getting clear, actionable specifications from business stakeholders is often challenging — they tend to be abstract, ambiguous, or incomplete. Acceptance Test-Driven Development (ATDD) provides a powerful approach to bridge this gap by enabling clear, executable specifications that align business needs with development. In this talk, we’ll explore how Robot Framework, a simple yet powerful tool, can foster collaboration between business and development teams. Through practical examples, we’ll demonstrate how to write effective tests and extend Robot Framework with custom Python libraries to meet project-specific needs. Walk away with insights and tools to transform how teams communicate, develop, and deliver software.
---
full_description:

One of the biggest challenges developers face is dealing with unclear, ambiguous, or abstract requirements from business stakeholders. These vague specifications often lead to misaligned expectations, wasted development time, and costly rework. Without a shared understanding, delivering the right product becomes a game of guesswork, frustrating both teams and delaying progress.

Acceptance Test-Driven Development (ATDD) solves this problem by introducing clear, executable specifications. ATDD ensures that requirements are expressed as concrete, testable examples, fostering alignment between business and development teams. Instead of interpreting abstract requirements, developers can rely on these tests as a shared “source of truth,” reducing misunderstandings and enhancing confidence in the software being built.

Robot Framework emerges as a simple yet powerful tool for implementing ATDD. Its keyword-driven, human-readable syntax enables seamless collaboration between technical and non-technical stakeholders, making specifications both executable and accessible. By bridging the communication gap, Robot Framework ensures that everyone — from business analysts to developers — shares a common understanding of the system requirements.

In this talk, we’ll dive into the core concepts of Robot Framework, providing an overview of its structure and capabilities. You’ll see how tests are written in its clear, keyword-driven syntax and explore existing libraries that simplify test automation for common scenarios. Beyond that, we’ll focus on how to extend Robot Framework by building custom Python libraries to address unique project requirements. By combining these elements, you’ll gain a solid understanding of how to leverage Robot Framework effectively, enabling teams to create powerful, maintainable, and collaborative test suites.
---
room: 
---
day: 
---
start_time: 
---
track: PyCon: Testing
