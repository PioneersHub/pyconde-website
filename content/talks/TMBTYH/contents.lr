title: BayBE: A Bayesian Back End for Experimental Planning in the Low-To-No-Data Regime
---
created: 2025-02-27
---
code: TMBTYH
---
speaker_names: Martin Fitzner, Alexander Hopp, Adrian Šošić
---
speakers:


### Martin Fitzner

Principal Data Scientist at Merck KGaA Darmstadt, Germany
Interested in combining machine learning, data science, computational natural science, and cheminformatics.

### Alexander Hopp

Mathematician who got into coding and enjoys it way too much. One of the three core developers of BayBE, the Bayesian Optimization Package developed at Merck KGaA, Darmstadt. Also working on antibody and retrosynthesis projects.

Interested in everything the intersection between mathematics and computer science has to offer, as well as in best practices for coding. Always curious to learn!

### Adrian Šošić

Lead Data Scientist at Merck Life Science KGaA, Darmstadt, Germany
Machine Learning and Probabilistic Modeling

---
abstract:

From coffee machine settings to chemical reactions to website AB testing - iterative make-test-learn cycles are ubiquitous. The [Bayesian Back End](https://emdgroup.github.io/baybe/stable/) (BayBE) is an open-source experimental planner enabling users to smartly navigate such black-box optimization problems in iterative settings. This tutorial will i) introduce the core concepts enabled by combining Bayesian optimization and machine learning; ii) explain our software design choices, robust tests and open-source libraries this is built on; and iii) provide a short practical hands-on session.
---
full_description:

In the evolving landscape of data science, advanced computational tools are crucial for driving innovation and efficiency. This tutorial introduces the [Bayesian Back End](https://emdgroup.github.io/baybe/stable/) (BayBE), an AI-assisted open-source experimental planner developed by [Merck KGaA](https://www.merckgroup.com/en), which utilizes Bayesian Optimization and machine learning to smartly streamline experimental workflows in the low-to-no-date regime. From chemical reactions to biological assays to coffee machine settings - with BayBE users can find optimal configurations in an iterative manner, which is anyway the main working mode of many experimentalists.

We will start the first part with a brief introduction to Bayesian Optimization, highlighting its principles and advantages in experimental design. Following this, we will showcase BayBE's unique features, including elegant categorical encodings and advanced capabilities like active learning, transfer learning or Pareto optimization.

In the second part, we explain some of our code and test design choices that went into the open-source Python package [`baybe`](https://github.com/emdgroup/baybe). This will include learnings about our built-in (de-)serialization engine, CI/CD, advanced hypothesis tests, autodocumentation and open-source tools BayBE is built on.

The final part will comprise of a hands-on tutorial. We will look at representative problems and guide potential users from formalization of the problem to performing the iterative loop to analyzing the results including an assessment of parameter relevance.
---
room: Ferrum
---
day: Thursday
---
start_time: 10:15
---
track: PyData & Scientific Libraries Stack
---
python_skill: 
---
domain_expertise: 
---
social_card_image: /static/media/social/talks/TMBTYH.png

