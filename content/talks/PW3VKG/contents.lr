title: Building versatile operating setups for real world use and testing with Python and the Raspberry Pi
---
created: 2025-03-18
---
code: PW3VKG
---
speaker_names: Jens Nie
---
speakers:


### Jens Nie

A physicist currently tackling the development of embedded devices at Rosenxt for various use cases. My journey with Python began a long, long time ago, when the interpreters version string said 1.4.

Besides my current efforts I can rely on great experience from various other roles in my prior career as a scientist, technology manager and department head.

---
abstract:

**Rosenxt** is the host of a number of ventures aiming to provide next level solutions for demanding problems in a variety of industries based on decades of engineering excellence.

Some of them address challenges in water environments ranging from water pipelines to offshore applications.
As differing as these areas may seem, regarding the solutions we build for them they have a lot in common.

Whether its the necessary power supply, movement and steering concepts or sensing approaches.
All of them benefit from generalized, smart solutions that we design as components that can later be orchestrated and configured in various setups to fulfill quite different purposes.

This presentation explores the versatility of leveraging a Raspberry Pi based hardware platform combined with a Python based application stack to bridge development and deployment of various basic components, such as motors and motor controllers, lift foils, steering units and controls.
By utilizing a unified platform, we demonstrate how the same system can seamlessly transition from test bench measurements during hardware component development to real-world applications for various industries.

The talk highlights how this approach can create a robust framework to help streamlining workflows, enhance scalability and reduce costs.
---
full_description:

We will specifically showcase a setup, where a custom made Raspberry Pi based hardware platform and a Python application stack is used for operating a so called functional model, where a set of components is orchestrated to showcase a final usage scenario and the same setup is used in a test rig environment to specifically benchmark a single component of the functional model. Both use cases work pretty much the same way and generate the same sort of data in the same formats and structure, which eases evaluation and handling significantly.

The solution presented showcases both 'standard' Python applications interacting with each other on a Raspberry Pi as well as **pyscript** based scripts running in a Web-Browser to visualise test data in realtime.
---
room: Platinum3
---
day: Thursday
---
start_time: 10:15
---
track: Embedded Systems & Robotics
---
python_skill: 
---
domain_expertise: 
---
social_card_image: /static/media/social/talks/PW3VKG.png

