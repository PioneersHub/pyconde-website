title: sieves: A Toolkit for Prototyping NLP Tasks With Structured Generation
---
created: 2024-12-22
---
code: YTBGHG
---
speaker_names: Raphael Mitsch
---
abstract:

While LLMs steal all the thunder these days, classic NLP tasks - classification, NER, etc. - remain ubiquitous. Whether or not generative AI is involved, decomposing NLP applications into a series of modular, pipelined tasks is a widely used and effective software engineering pattern.

Generative and predictive zero-/few-shot (ZFS) models complement this approach by enabling rapid prototyping of NLP tasks with little to no data. However, they come with their own challenges:

- **Generative models** CAN struggle to produce outputs in the required format, leading to the need for *structured generation*—a set of methods designed to enforce or fine-tune generative models to precisely match the desired output structure.
- **Predictive ZFS models**, while task-specific, typically lack generalization across different tasks.

What does that mean for your friendly neighbourhood ML engineer, looking for the best way to quickly prototype a NLP pipeline? Structured generation remains an active area of research, and existing tools have varying strengths and limitations. Switching between them is not always straightforward, making the choice potentially a sticky one. Ideally, engineers need a flexible solution that supports rapid experimentation with minimal setup and sensible defaults to get started quickly.

Cue `sieves`: a toolkit for rapid prototyping of NLP tasks with ZFS models. It provides a unified interface for a variety of models, tasks, and methods for structured output generati
---
full_description:

In NLP, implementing pipelines of established tasks is a common practice. Prototypes that require little to no data are often very valuable during early system development, as fully supervised models typically demand extensive annotated datasets. Generative and predictive zero-/few-shot learning models address this limitation by eliminating the immediate need for full annotation, enabling a “warm start” over a “cold start” with fully supervised models. This approach accelerates development and enables faster feedback loops.

Despite the richness of the open NLP ecosystem, there currently is no unified toolkit supporting rapid task prototyping without tight coupling to a specific (1) model, (2) structured generation library (e.g. https://github.com/stanfordnlp/dspy, https://github.com/dottxt-ai/outlines, https://github.com/1rgs/jsonformer, https://github.com/BoundaryML/baml) or (3) task. All three components should be as interchangeable as possible to improve on the developer experience and efficacy. `sieves` aims to fill this gap. 

### Agenda

This talk will cover the following topics:

1. **The Value of Pipelines and Task Isolation**: Exploring their usefulness as abstractions, even when using generative models.
2. **Warm Starts With Prototyping**: How to iterate effectively without relying on a training set.
3. **Overview of Structured Generation Tools**: A summary of the current landscape in structured generation.
4. **Introducing `sieves`**: Bringing it all together with pipelines, warm starts/prototyping, and structured generation.

The largest part of the presentation will focus on `sieves`, its core concepts, and its benefits:

- **Loose coupling**: Decoupling models, tasks, and structured generation backends for flexibility.
- **Unified format**: Standardized input/output formats across models, tasks, and structured generation backends.
- **Generative and predictive ZFS support**: Compatibility with both approaches for versatility.
- **Pipeline architecture**: Designed for maintainability and easy debugging.
- **Comprehensive task support**: Prebuilt tasks for ZFS regimes, enabling single-line execution for tasks such as:
    - Classification, NER, entity linking, REL, translation, etc.
- **Auxiliary component integration**: Support for essential tools often needed in practical NLP workflows.
- **Customizability**: Lightweight encapsulation of tasks, allowing users to easily customize or add new tasks.
- **Supervised training support**: Enables compilation and export of training, validation, and test datasets in popular formats like Hugging Face’s `datasets`.

### Takeaways

By the end of this talk, attendees will understand:

1. **The Benefits of Pipelines and Prototyping For Warm Starts**: How pipelines and warm starts - leveraging prototypes with ZFS techniques - can speed up the development of NLP applications, also when using generative models.
2. **The Role of Structured Generation**: Insights into the current state of structured generation for text models and its impact on task implementation.
3. **Contributions of `sieves`**: The place of `sieve` in the NLP ecosystem and how it contributes to a smoother and more productive developer experience in building out NLP applications by simplifying prototyping and accelerating development.
---
room: 
---
day: 
---
start_time: 
---
track: PyData: Natural Language Processing & Audio (incl. Generative AI NLP)
